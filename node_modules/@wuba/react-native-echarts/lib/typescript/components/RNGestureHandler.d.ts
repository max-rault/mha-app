import React from 'react';
import type { Gesture, GestureDetector } from 'react-native-gesture-handler';
import type { DefaultRNGestures, DispatchEvents, RNGestureHandlerGesture } from '../types';
interface RNGHType {
    Gesture: typeof Gesture;
    GestureDetector: typeof GestureDetector;
}
export declare const getDefaultPanRNGesture: (Gesture: RNGHType['Gesture'], dispatchEvents: DispatchEvents) => import("react-native-gesture-handler/lib/typescript/handlers/gestures/panGesture").PanGesture;
export declare const getDefaultPinchRNGesture: (Gesture: RNGHType['Gesture'], dispatchEvents: DispatchEvents) => import("react-native-gesture-handler/lib/typescript/handlers/gestures/pinchGesture").PinchGesture;
export declare const getDefaultTapRNGesture: (Gesture: RNGHType['Gesture'], dispatchEvents: DispatchEvents) => import("react-native-gesture-handler/lib/typescript/handlers/gestures/tapGesture").TapGesture;
export declare const getDefaultRNGestures: (Gesture: RNGHType['Gesture'], dispatchEvents: DispatchEvents) => DefaultRNGestures;
type RNGestureHandlerProps = {
    RNGH: RNGHType;
    dispatchEvents: DispatchEvents;
    gesture?: RNGestureHandlerGesture;
};
export declare function RNGestureHandler({ RNGH, dispatchEvents, gesture: gestureProp, }: RNGestureHandlerProps): React.JSX.Element;
export {};
//# sourceMappingURL=RNGestureHandler.d.ts.map