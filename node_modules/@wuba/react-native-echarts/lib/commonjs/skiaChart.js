"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  SVGRenderer: true
};
Object.defineProperty(exports, "SVGRenderer", {
  enumerable: true,
  get: function () {
    return _SVGRenderer.SVGRenderer;
  }
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNativeSkia = require("@shopify/react-native-skia");
var _reactNative = require("react-native");
var _platform = require("zrender/lib/core/platform");
var _platform2 = require("./utils/platform");
var _GestureHandler = require("./components/GestureHandler");
var _events = require("./components/events");
var _SVGRenderer = require("./SVGRenderer");
var _types = require("./types");
Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _types[key];
    }
  });
});
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); } // import { DEFAULT_FONT_FAMILY } from './utils/font';
(0, _platform.setPlatformAPI)({
  measureText: _platform2.measureText
});
function getSkSvg(svg) {
  // TODO: 全局替换字体做法比较暴力，或者实用定义字体，可能某些场景字体设置失效，需要修复
  // if (svg) {
  //   svg = svg.replace(new RegExp(zrenderFontFamily, 'g'), DEFAULT_FONT_FAMILY)
  //   console.log('svg', svg)
  // }
  const initString = svg ? _reactNativeSkia.Skia.SVG.MakeFromString(svg) : undefined;
  return initString ?? undefined;
}
function SkiaComponent(props, ref) {
  const {
    svg,
    handleGesture = true,
    width: inlineWidth,
    height: inlineHeight,
    style,
    ...gestureProps
  } = props;
  const initialWidth = inlineWidth || (style === null || style === void 0 ? void 0 : style.width);
  const initialHeight = inlineHeight || (style === null || style === void 0 ? void 0 : style.height);
  const [svgString, setSvgString] = (0, _react.useState)(getSkSvg(svg));
  const [width, setWidth] = (0, _react.useState)(initialWidth ?? 0);
  const [height, setHeight] = (0, _react.useState)(initialHeight ?? 0);
  const zrenderId = (0, _react.useRef)();
  const canvasRef = _reactNativeSkia.useCanvasRef === null || _reactNativeSkia.useCanvasRef === void 0 ? void 0 : (0, _reactNativeSkia.useCanvasRef)();
  const dispatchEvents = (0, _react.useCallback)((types, nativeEvent, eventArgs) => {
    if (zrenderId.current === undefined) return;
    (0, _events.dispatchEventsToZRender)(zrenderId.current, types, nativeEvent, eventArgs);
  }, []);
  (0, _react.useImperativeHandle)(ref, () => ({
    elm: {
      setAttribute: (name, value) => {
        if (name === 'width') {
          setWidth(value);
        }
        if (name === 'height') {
          setHeight(value);
        }
      },
      setAttributeNS: (_name, _value) => {},
      removeAttribute: _name => {},
      patchString: (_oldVnode, vnode) => {
        const _svgString = getSkSvg(vnode);
        setSvgString(_svgString);
      },
      setZrenderId: id => {
        zrenderId.current = id;
      },
      makeImageSnapshot: () => {
        var _canvasRef$current;
        const image = canvasRef === null || canvasRef === void 0 || (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.makeImageSnapshot();
        return image ? `data:image/png;base64,${image.encodeToBase64()}` : null;
      }
    },
    viewprot: {},
    dispatchEvents,
    getChartSize: () => {
      return {
        width: initialWidth,
        height: initialHeight
      };
    }
  }), [dispatchEvents, initialWidth, initialHeight, canvasRef]);
  return svgString ? /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    testID: "component",
    style: {
      ...style,
      width,
      height
    }
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSkia.Canvas, {
    style: {
      ...style,
      width,
      height
    },
    pointerEvents: "auto",
    ref: canvasRef
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSkia.ImageSVG, {
    svg: svgString,
    x: 0,
    y: 0,
    width: width,
    height: height
  })), handleGesture ? /*#__PURE__*/_react.default.createElement(_GestureHandler.GestureHandler, _extends({
    dispatchEvents: dispatchEvents
  }, gestureProps)) : null) : null;
}
const SkiaChart = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(SkiaComponent));
SkiaChart.displayName = 'SkiaChart';
var _default = exports.default = SkiaChart;
//# sourceMappingURL=skiaChart.js.map